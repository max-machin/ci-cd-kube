name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]  # Choisir la version de Node.js que tu veux tester

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      working-directory: ./express-app
      run: npm ci

    - name: Run Tests
      working-directory: ./express-app
      run: npm test

    - name: Build Docker image
      run: |
        docker build -t myusername/myapp:${{ github.sha }} ./express-app

    - name: Run Docker container for testing
      run: |
        docker run -d --name myapp-test -p 8080:8080 myusername/myapp:${{ github.sha }}
        sleep 5 # Attendre que l'application se lance
        curl -f http://localhost:8080 || exit 1 # Vérifier si l'application répond
        docker stop myapp-test
        docker rm myapp-test

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: |
        docker push myusername/myapp:${{ github.sha }}
